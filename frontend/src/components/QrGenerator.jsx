const QRCode = 'qrcode'; // Import the QRCode component from the library

function QrGenerator({qrData}) {
    if (!qrData || !qrData.data_url) {
        return <p className="text-center text-red-500">Invalid QR data provided.</p>;
    }

    // Extract necessary info for display
    const {QR_ID, Course_Code, QR_Start_Time, QR_End_Time, data_url} = qrData;

    // Format dates for better readability
    const startTime = new Date(QR_Start_Time).toLocaleString();
    const endTime = new Date(QR_End_Time).toLocaleString();

    return (
        <div className="text-center p-4 border rounded-lg bg-gray-50 flex flex-col items-center">
            <h4 className="text-lg font-medium mb-2">Scan this QR Code</h4>
            <p className="text-sm text-gray-600 mb-1">Course: {Course_Code}</p>
            <p className="text-sm text-gray-600 mb-3">QR ID: {QR_ID}</p>

            {/* Display the QR code image generated by the backend */}
            {/* The backend already provides a data_url, so we can use that directly */}
            <img
                src={data_url}
                alt={`QR Code for ${Course_Code} (ID: ${QR_ID})`}
                className="w-64 h-64 object-contain border rounded shadow-sm" // Adjust size as needed
            />

            {/* Alternatively, if backend only sent QR_ID, generate on frontend: */}
            {<QRCode
                value={QR_ID} // The value to encode in the QR code (usually the unique ID)
                size={256}     // Size of the QR code in pixels
                level={"H"}     // Error correction level ('L', 'M', 'Q', 'H')
                includeMargin={true}
            />}

            <p className="text-xs text-gray-500 mt-3">
                Valid from: {startTime} <br/>
                Expires at: {endTime}
            </p>
        </div>
    );
}

export default QrGenerator;